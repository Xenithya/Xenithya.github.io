[{"content":"git 常用命令 初始化 初始化一个仓库并提交\n1 2 3 4 5 6 git init git remote add origin https://gitlink.com/yourusername/repo.git git pull --rebase origin master git push -u origin master # 或 git push -u origin main git config --global user.name \u0026#34;Your Name\u0026#34; git config --global user.email \u0026#34;your@email.com\u0026#34; submodule 下载 下载带有 submodule 的仓库\n1 2 3 git clone --recursive \u0026lt;主仓库地址\u0026gt; # 或 git clone --recurse-submodules \u0026lt;主仓库地址\u0026gt; 添加 添加一个子模块到仓库：\n1 2 3 git submodule add https://github.com/user/lib-example.git libs/external git add .gitmodules libs/external # 添加子模块元数据及目录 git commit -m \u0026#34;feat: 添加子模块 lib-example\u0026#34; 删除 彻底从 Git 仓库中移除一个子模块（submodule）\n1 2 3 4 5 6 7 git submodule deinit -f 子模块路径 # 示例：git submodule deinit -f libs/logger git rm --cached 子模块路径 # 示例：git rm --cached libs/logger rm -rf 子模块路径 # 示例：rm -rf libs/logger rm -rf .git/modules/子模块路径 # 示例：rm -rf .git/modules/libs/logger git add .gitmodules # 提交配置变更 git commit -m \u0026#34;移除子模块：子模块路径\u0026#34; # 示例：git commit -m \u0026#34;移除子模块：libs/logger\u0026#34; git push origin 主分支名 # 示例：git push origin main 验证是否删除干净​\n1 2 cat .git/config | grep submodule ls -la .git/modules 更新 在主仓库中更新子模块引用\n1 git submodule update --remote ​​提交主仓库的变更\n1 2 3 git add .gitmodules path/to/submodule git commit -m \u0026#34;更新子模块引用至最新提交\u0026#34; git push origin main 克隆主仓库时拉取最新子模块\n1 git clone --recurse-submodules https://github.com/your/main-repo.git 参数 \u0026ndash;recurse-submodules 会同步子模块的最新提交（基于主仓库记录的ID） 验证子模块状态\n1 git submodule status ","date":"2025-04-25T16:26:50+08:00","permalink":"https://xenithya.github.io/p/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Git常用命令"},{"content":"Microsoft Remote Desktop（RDP ）优化流程 引用文章：RDP 优化流程\n默认使用的时候会感觉很卡顿，网速明明很好，但是就是很卡顿。其中核心的几个点设置好了，基本上就解决大部分问题了。\n一、远程会话环境设置 Win+R打开运行，输入\n1 gpedit.msc 找到:\n计算机配置-\u0026gt;管理模板-\u0026gt;Windows组件-\u0026gt;远程桌面服务-\u0026gt;远程桌面会话主机-\u0026gt;远程会话环境。\n下面这几个打开，有效提高rdp性能。\n二、连接设置 找到:\n计算机配置-\u0026gt;管理模板-\u0026gt;Windows组件-\u0026gt;远程桌面服务-\u0026gt;远程桌面会话主机-\u0026gt;连接。\nrdp协议同时使用udp和tcp。有效增加网络稳定性和传输速率。\n三、注册表设置\n打开注册表编辑器\n把这个复制粘贴过去：\n1 计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations 敲回车\n在空白处右键-\u0026gt;新建-\u0026gt;DWORD（32位）值，命名为\n1 DWMFRAMEINTERVAL 双击刚添加的这一项，基数选择为十进制，数值数据填写8.\n写8的话，就是120fps+，会占用显卡使用率，15的限制的是60fps。我建议直接写8就行了。当然你要是显卡可以，数字越小越好。\n测试fps网站： fps测试网站\n更流程参考：sunshine(服务端)+moonlight(客户端)\n","date":"2025-04-25T16:10:47+08:00","permalink":"https://xenithya.github.io/p/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%AE%BE%E7%BD%AE/","title":"远程桌面设置"},{"content":"Linux 常用命令 查看进程所在的核ID号 1 2 3 4 pidof a.out # 获取pid ps -o pid,psr,comm -p \u0026lt;pid\u0026gt; taskset -c -p \u0026lt;pid\u0026gt; top -p \u0026lt;pid\u0026gt; # 按f进入菜单，空格键选择P，ESC退出，在最后一栏显示cpuid 显示终端输入过的命令 1 2 history # 每个命令都有一个命令号id，输入：!id 即输入该id对应的命令 进程绑定cpu 1 2 3 numactl --hardware #查看cpu numactl --show numastat shell获取当前目录 1 2 CURRENT_DIR=$(cd $(dirname $0);pwd) echo ${CURRENT_DIR} 获取程序运行时间 第一种方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include \u0026lt;sys/time.h\u0026gt; struct timeval startTime, endTime; float timeUsed; gettimeofday(\u0026amp;startTime, NULL); ... gettimeofday(\u0026amp;endTime, NULL); timeUsed = 1000000 * (endTime.tv_sec - startTime.tv_sec) + (endTime.tv_usec - startTime.tv_usec); timeUsed /= 1000000; printf(\u0026#34;total times:[%f]s\\n\u0026#34;, timeUsed); aaa a a a a a a a a a a aa a a a a aa a 第二种方法 1 2 3 4 5 #include \u0026lt;time.h\u0026gt; clock_t start = clock(); // the code need to measure time clock_t end = clock(); double timeSpend = (double)(end - start) / CLOCKS_PER_SEC; //得到的结果是秒，(end-start)得到的结果是毫秒，不适用于多线程场合 第三种方法 1 2 3 4 #include \u0026lt;Windows.h\u0026gt; DWORD start = GetTickCount(); DWORD end = GetTickCount(); DWORD timeSpend = end - start; //得到的结果是毫秒 第四种方法 1 2 3 4 5 6 7 8 9 #include \u0026lt;Windows.h\u0026gt; LARGE_INTEGER t1,t2,tc; QueryPerformanceFrequency(\u0026amp;tc); QueryPerformanceCounter(\u0026amp;t1); ... QueryPerformanceCounter(\u0026amp;t2); double time=(double)(t2.QuadPart-t1.QuadPart)/(double)tc.QuadPart; printf(\u0026#34;total times:[%lf] ms\\n\u0026#34;, time * 1000);//ms (double)tc.QuadPart: 10 000 000 mpich命令 1 2 3 4 5 #mpiexec -l -hosts cn0,cn1 -wdir ./armcore0/host_code/ ./vec_add_host 1024 24 :\\ mpiexec -l -f ./machinefile -wdir ./armcore0/host_code/ ./vec_add_host 1024 24 :\\ -wdir ./armcore4/host_code/ ./vec_add_host 24 :\\ -wdir ./armcore8/host_code/ ./vec_add_host 1024 24 :\\ -wdir ./armcore12/host_code/ ./vec_add_host 1024 24 其中machinefile内容为：\n1 2 cn0:1 cn1:1 表示cn0执行这4个程序一遍，如果machinefile中的内容为cn0:4则表示执行这4个程序4遍。\nmachinefile也可以用\n1 -hosts cn0,cn1 -n 8 代替。\n免密登录 免密登录本地：\n1 ssh localhost 执行命令：\n1 ssh-keygen -t rsa 生成之后会在用户的根目录生成一个 “.ssh”的文件夹，文件夹下有这几个文件\nid_rsa : 生成的私钥文件 id_rsa.pub ： 生成的公钥文件\nknow_hosts : 已知的主机公钥清单\n本地生成的公钥添加到目标服务器的 authorized_keys 文件中\n1 2 #ssh-copy-id 将key写到远程机器的～/.ssh/authorized_keys文件中 ssh-copy-id -i .ssh/id_rsa.pub xyy@172.168.0.11 登录远程机器\n1 ssh root@172.168.0.11 创建新用户及用户权限 增加用户： (1)在root权限下\n命令：useradd +用户名，它不会在/home目录下创建同名文件夹，也没有创建密码，因此利用这个用户登录系统，是登录不了的；\n命令：useradd -m +用户名，将在/home目录下创建同名文件夹，然后利用（ passwd + 用户名）为指定的用户名设置密码。\nuseradd选项:\n1 2 3 4 5 6 -c # comment 指定一段注释性描述。 -d # 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。 -g # 用户组 指定用户所属的用户组。 -G # 用户组，用户组 指定用户所属的附加组。 -s # Shell文件 指定用户的登录Shell。 -u # 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。 (2)命令：adduser +用户名，在/home目录下会自动创建同名文件夹\n创建新用户后，同时会在etc目录下的passwd文件中添加这个新用户的相关信息\n创建新用户后shell无法自动补全命令或使用基本的shell命令\n按照上述命令创建一个新用户后，提示符仅仅是一个$，输入命令，用TAB键也无法补全命令。并且没有命令历史功能。\n使用root用户查看passwd文件\n1 grep 用户名 /etc/passwd 可以发现默认的shell 是/bin/sh，将其修改为/bin/bash 后即可\n1 vi /etc/passwd 删除用户： 1 2 3 userdel username #若想将它在系统上的文件也删除掉，使用命令： userdel -r username 修改用户参数： 1 usermod --help # 查看修改用户这个命令的相关参数 用户的相互切换： 1 su 用户名 # su是switch user的缩写，表示用户切换 用户组的添加和删除： 1 2 groupadd testgroup # 组的添加 groupdel testgroup # 组的删除 说明：组的增加和删除信息会在etc目录的group文件中体现出来。\n示例：\n1 2 3 4 5 useradd -m xyy passwd xyy chown -R xyy ./xyy chgrp -R xyy ./xyy/ vim /etc/passwd # 将其修改为/bin/bash 后即可 vim删除多行 1 9,12d linux新建用户组权限 比如找不到root下安装好的mpi\n方法：修改在xyy用户下的.bashrc文件，将路径添加到末尾，再source .bashrc即可。\n编译内核 1 make mrproper # 清空一些配置信息检查源码是否完整 在当前目录下执行：\n1 2 3 4 5 6 make # 相当于make bzImage加make modules） ## 另外make可以加-j 20 意思启动20个线程编译 make modules #生成相应的模块 make modules_install #将相应的模块拷贝到对应的目录下 make install #该命令的作用是将.config，vmlinuz，initrd.img，System.map文件到/boot/目录、更新grub。默认启动新内核 配置内核 在正式编译内核之前，我们首先必须配置需要包含哪些模块。实际上，有一些非常简单的方式来配置。使用一个命令，你能拷贝当前内核的配置文件，然后使用可靠的 menuconfig 命令来做任何必要的更改。\n1 cp /boot/config-$(uname -r) .config 上述命令的意思就是拷贝对应当前内核配置到当前目录下并重命名为.config(文件名前加.意思为隐藏文件)。\n可以自行查看下：\n1 uname -r 的输出\n之后执行命令：\n1 make menuconfig 生成的配置文件在\n1 /home/sys/linux-4.19.46-mt/.config 编译和安装 退出menuconfig后，在命令行中输入\n1 make -j4 命令即可开始编译。-j4意思是并发执行，可以提高速度，一般情况 下不要多于CPU核数。这个命令的执行会耗费很长时间。\n编译完成之后首先安装模块，命令为：\n1 sudo make modules_install 安装内核， 命令为： 1 sudo make install 回到顶部 启用内核作为引导，输入下列命令将内核作为引导，将数字更改为你自己编译的版本号：\n1 sudo update-initramfs -c -k 5.3.10 下面更新一下grub：\n1 sudo update-grub 之后重启即可在启动界面选择需要启动的内核。如果看不到启动选择界面，请执行以下操作：\n1 sudo vi /etc/default/grub 将文件修改为以下模式：（注释掉hidden那一行，将timeout更改为较大值，这里改为了10）之后执行\n1 sudo update-grub 自定义grub启动项 修改启动项名称:\n在ubuntu下，可以直接修改/boot/grub/grub.cfg中有关启动项的名称。\n增加自定义启动项 复制/boot/grub/grub.cfg有关启动项的内容到/etc/grub.d/40_custom进行自定义即可。\n执行update 最后都要执行下述命令以生效。\n1 sudo update-grub 按时间列举目录下文件 1 ll -rt DD复制硬盘 1 2 3 4 5 6 7 8 #查看硬盘盘符： fdisk -l|grep /dev/sd #格式化硬盘： mkfs.ext4 /dev/sdn # n=要格式的盘id #拷贝硬盘： dd if=/dev/sdj of=/dev/sdk bs=64M shell脚本获取当前路径 方法一 1 2 3 #!/usr/bin/env bash Cur_Dir=$(pwd) echo $Cur_Dir 方法二 1 2 3 4 5 6 #!/usr/bin/env bash basedir=cd $(dirname $0); pwd -P echo $basedir # dirname $0，取得当前执行的脚本文件的父目录 # cd dirname $0，进入这个目录(切换当前工作目录) # pwd，显示当前工作目录(cd执行后的) 查看文件夹大小 1 2 du -h –max-depth=1 /var/log/* du -sh /* 查看文件夹下有多少个文件 查看目录下有多少个文件及文件夹需在终端输入 1 ls | wc -w 查看目录下有多少个文件需在终端输入 1 ls | wc -c 查看文件夹下有多少个文件，多少个子目录需在终端输入 1 ls -l |wc -l 若只想知道文件的个数，则需在终端输入 1 /bin/ls -l |grep ^-|wc -l 环境变量 1 2 /etc/profile.d # 用户每次登录，会执行该文件夹下的所有.sh文件 网络bind error 1 2 # Address already in use netstat -tanlp 查看内核版本 1 2 cat /etc/issue cat /proc/version 查看cpu个数及核心数 总核数 = 物理CPU个数 X 每颗物理CPU的核数 总逻辑CPU数 = 物理CPU个数 X 每颗物理CPU的核数 X 超线程数\n查看物理CPU个数 1 cat /proc/cpuinfo| grep \u0026#34;physical id\u0026#34;| sort| uniq| wc -l 查看每个物理CPU中core的个数(即核数) 1 cat /proc/cpuinfo| grep \u0026#34;cpu cores\u0026#34;| uniq 查看逻辑CPU的个数 1 cat /proc/cpuinfo| grep \u0026#34;processor\u0026#34;| wc -l 查看线程数 1 grep \u0026#39;processor\u0026#39; /proc/cpuinfo | sort -u | wc -l 注意，此处查看的线程数是总的线程数，可以理解为逻辑cpu的数量\n设置堆栈大小 1 2 3 4 5 6 7 8 9 10 11 12 13 #include \u0026lt;sys/resource.h\u0026gt; struct rlimit rlim, rlim_new; if (getrlimit(RLIMIT_STACK, \u0026amp;rlim) == 0) { printf(\u0026#34;****** [%d]: %ld %ld ******\\n\u0026#34;, __LINE__, rlim.rlim_cur, rlim.rlim_max); // rlim_new.rlim_cur = rlim_new.rlim_max = RLIM_INFINITY; rlim_new.rlim_cur = rlim_new.rlim_max = rlim.rlim_cur; if (setrlimit(RLIMIT_STACK, \u0026amp;rlim_new)!=0) { rlim_new.rlim_cur = rlim_new.rlim_max = rlim.rlim_max; setrlimit(RLIMIT_STACK, \u0026amp;rlim_new); } } getrlimit(RLIMIT_STACK, \u0026amp;rlim); printf(\u0026#34;****** [%d]: %ld %ld ******\\n\u0026#34;, __LINE__, rlim.rlim_cur, rlim.rlim_max); mkstemp 1 2 #include \u0026lt;stdlib.h\u0026gt; int mkstemp(char * template); 函数说明：\nmkstemp()用来建立唯一的临时文件. 参数template 所指的文件名称字符串中最后六个字符必须是XXXXXX.\nmkstemp()会以可读写模式和0600 权限来打开该文件, 如果该文件不存在则会建立该文件. 打开该文件后其文件描述词会返回.\n文件顺利打开后返回可读写的文件描述词. 若果文件打开失败则返回NULL, 并把错误代码存在errno 中.\n错误代码：EINVAL 参数template 字符串最后六个字符非XXXXXX. EEXIST 无法建立临时文件.\n查看内核版本号 1 uname -r lspci -k 选项表示输出信息中显示正在使用的驱动和内核中可以支持该设备的模块。\n1 lspci -k -s 08:00.0 系统时间设置 1 2 3 date 1118184321 # 11 18 18 43 21 # 月 日 时 分 年 查找指定字符串 1 grep -rn reserve_all_mem_mt_safe 开机自动加载模块 1 depmod 将需要加载的.ko文件放到\n1 /lib/modules/$(uname -r)/update 新建的文件夹下\n然后执行depmod即可，在\n1 /lib/modules/$(uname -r)/modules.dep 文件中能看到需要加载的.ko文件 或在\n1 /etc/rc.local 文件中添加\n编译成模块 1 make -C /home/sys/linux-4.19.46-mt/ M=`pwd` modules 卸载PCI设备 1 echo 1 \u0026gt; /sys/bus/pci/device/0000\\:03\\:00.0/remove 重新对PCI/PCIe总线进行枚举，可执行命令\n1 2 3 4 5 echo 1 \u0026gt; /sys/bus/pci/rescan $make modules $sudo make modules_install $sudo make install update-initramfs: Generating /boot/initrd.img-4.19.46-vfio-1119+ vscode添加头部注释 搜索 fileheader\n安装 koroFileHeader\n修改 设置-\u0026gt;fileheader-\u0026gt;config obj-\u0026gt;setting.json\n1 2 ctrl + alt + i # 生成头部注释 ctrl + alt + t # 生成函数注释 Linux C内存泄漏检查 1 valgrind --tool=memcheck --leak-check=full ./test Linux程序前台后台切换 在Linux终端运行命令的时候，在命令末尾加上 \u0026amp; 符号，就可以让程序在后台运行 1 root@Ubuntu$ ./tcpserv01 \u0026amp; 如果程序正在前台运行，可以使用 Ctrl+z 选项把程序暂停，然后用 bg %[number] 命令把这个程序放到后台运行，摁Ctrl+z，然后在最后一行加上 1 bg %number 对于所有运行的程序，我们可以用jobs –l 指令查看 1 [kettle@4 data-integration]$ jobs -l 也可以用 fg %[number] 指令把一个程序掉到前台 1 2 cat@Ubuntu:~/unp/unpv13e/tcpcliserv$ fg %1 ./tcpserv01 也可以直接终止后台运行的程序，使用 kill 命令 1 cat@Ubuntu:~/unp/unpv13e/tcpcliserv$ kill %1 任意类型循环左右移位n位 1 2 3 #define LOGIC_LSHIFT_NBIT_TYPE(data, nbit, type) ((type)((data \u0026gt;\u0026gt; (sizeof(type) \u0026lt;\u0026lt; 3) - nbit) | (data \u0026lt;\u0026lt; nbit))) #define LOGIC_RSHIFT_NBIT_TYPE(data, nbit, type) ((type)((data \u0026lt;\u0026lt; (sizeof(type) \u0026lt;\u0026lt; 3) - nbit) | (data \u0026gt;\u0026gt; nbit))) #define LOGIC_RSHIFT_NVLAN(data, nbit) ((data | (1 \u0026lt;\u0026lt; (nbit))) | 0xFFFFFFF) lspci -vv Linux 中用于显示 PCI/PCIe 设备超详细硬件信息的命令\n__builtin_popcount GCC 编译器中四个重要的内置函数之一。__builtin_popcount(x)：该函数用于计算一个整数的个数(设置位)。\n绑定CPU的C代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #define _GNU_SOURCE #include \u0026lt;sched.h\u0026gt; void set_CPU_affinity(int core_id) { cpu_set_t mask; CPU_ZERO(\u0026amp;mask); CPU_SET(core_id, \u0026amp;mask); sched_setaffinity(0, sizeof(cpu_set_t), \u0026amp;mask); } void get_CPU_affinity() { cpu_set_t get; CPU_ZERO(\u0026amp;get); if (sched_getaffinity(0, sizeof(get), \u0026amp;get) == -1)//获取线程CPU亲和力 { printf(\u0026#34;warning: cound not get thread affinity, continuing...\\n\u0026#34;); } int i; for (i = 0; i \u0026lt; 16; i++) { if (CPU_ISSET(i, \u0026amp;get))//判断线程与哪个CPU有亲和力 { printf(\u0026#34;this thread %d is running processor : %d\\n\u0026#34;, i,i); } } } cgroup执行命令 使用 Linux ​cgroups（控制组）​来限制进程 CPU 资源\n1 cgexec -g cpu:test_cpu ./a.out /bin/bash有字符\u0026rsquo;\\r\u0026rsquo;无法解析 1 2 3 vi hello.sh ### Esc进入命令行运行模式 ### : set ff=unix ","date":"2025-04-25T16:10:29+08:00","permalink":"https://xenithya.github.io/p/linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"Linux 常用命令"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://xenithya.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu_2307260c751d0e0b.jpg","permalink":"https://xenithya.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://xenithya.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://xenithya.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://xenithya.github.io/p/%E5%8D%A0%E4%BD%8D%E7%AC%A6%E6%96%87%E6%9C%AC/matt-le-SJSpo9hQf7s-unsplash_hu_c1ca39d792aee4ab.jpg","permalink":"https://xenithya.github.io/p/%E5%8D%A0%E4%BD%8D%E7%AC%A6%E6%96%87%E6%9C%AC/","title":"占位符文本"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://xenithya.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://xenithya.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://xenithya.github.io/p/emoji-support/","title":"Emoji Support"}]